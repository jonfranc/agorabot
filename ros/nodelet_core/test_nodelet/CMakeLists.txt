cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

rosbuild_add_boost_directories()

#common commands for building c++ executables and libraries
rosbuild_add_library(${PROJECT_NAME} src/plus.cpp src/console_tests.cpp)

rosbuild_add_rostest(test_local.launch)
rosbuild_add_rostest(test_loader.launch)

rosbuild_add_gtest(test_callback_queue_manager src/test_callback_queue_manager.cpp)
rosbuild_link_boost(test_callback_queue_manager thread)
rosbuild_add_executable(test_console test/test_console.cpp)
rosbuild_add_gtest_build_flags(test_console)

rosbuild_add_rostest(test/test_console.launch)

# Not a real test. Tries to measure overhead of CallbackQueueManager.
rosbuild_add_executable(benchmark src/benchmark.cpp)
rosbuild_link_boost(benchmark thread)
