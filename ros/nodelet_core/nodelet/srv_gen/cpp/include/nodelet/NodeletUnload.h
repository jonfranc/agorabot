/* Auto-generated by genmsg_cpp for file /home/magnate/ros/nodelet_core/nodelet/srv/NodeletUnload.srv */
#ifndef NODELET_SERVICE_NODELETUNLOAD_H
#define NODELET_SERVICE_NODELETUNLOAD_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace nodelet
{
template <class ContainerAllocator>
struct NodeletUnloadRequest_ {
  typedef NodeletUnloadRequest_<ContainerAllocator> Type;

  NodeletUnloadRequest_()
  : name()
  {
  }

  NodeletUnloadRequest_(const ContainerAllocator& _alloc)
  : name(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _name_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  name;


private:
  static const char* __s_getDataType_() { return "nodelet/NodeletUnloadRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "c1f3d28f1b044c871e6eff2e9fc3c667"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "d08a3b641c2f8680fbdfb1ea2e17a3e1"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string name\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, name);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(name);
    return size;
  }

  typedef boost::shared_ptr< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::nodelet::NodeletUnloadRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct NodeletUnloadRequest
typedef  ::nodelet::NodeletUnloadRequest_<std::allocator<void> > NodeletUnloadRequest;

typedef boost::shared_ptr< ::nodelet::NodeletUnloadRequest> NodeletUnloadRequestPtr;
typedef boost::shared_ptr< ::nodelet::NodeletUnloadRequest const> NodeletUnloadRequestConstPtr;


template <class ContainerAllocator>
struct NodeletUnloadResponse_ {
  typedef NodeletUnloadResponse_<ContainerAllocator> Type;

  NodeletUnloadResponse_()
  : success(false)
  {
  }

  NodeletUnloadResponse_(const ContainerAllocator& _alloc)
  : success(false)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;


private:
  static const char* __s_getDataType_() { return "nodelet/NodeletUnloadResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "358e233cde0c8a8bcfea4ce193f8fc15"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "d08a3b641c2f8680fbdfb1ea2e17a3e1"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool success\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, success);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, success);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(success);
    return size;
  }

  typedef boost::shared_ptr< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::nodelet::NodeletUnloadResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct NodeletUnloadResponse
typedef  ::nodelet::NodeletUnloadResponse_<std::allocator<void> > NodeletUnloadResponse;

typedef boost::shared_ptr< ::nodelet::NodeletUnloadResponse> NodeletUnloadResponsePtr;
typedef boost::shared_ptr< ::nodelet::NodeletUnloadResponse const> NodeletUnloadResponseConstPtr;

struct NodeletUnload
{

typedef NodeletUnloadRequest Request;
typedef NodeletUnloadResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct NodeletUnload
} // namespace nodelet

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::nodelet::NodeletUnloadRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c1f3d28f1b044c871e6eff2e9fc3c667";
  }

  static const char* value(const  ::nodelet::NodeletUnloadRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc1f3d28f1b044c87ULL;
  static const uint64_t static_value2 = 0x1e6eff2e9fc3c667ULL;
};

template<class ContainerAllocator>
struct DataType< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "nodelet/NodeletUnloadRequest";
  }

  static const char* value(const  ::nodelet::NodeletUnloadRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string name\n\
\n\
";
  }

  static const char* value(const  ::nodelet::NodeletUnloadRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::nodelet::NodeletUnloadResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "358e233cde0c8a8bcfea4ce193f8fc15";
  }

  static const char* value(const  ::nodelet::NodeletUnloadResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x358e233cde0c8a8bULL;
  static const uint64_t static_value2 = 0xcfea4ce193f8fc15ULL;
};

template<class ContainerAllocator>
struct DataType< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "nodelet/NodeletUnloadResponse";
  }

  static const char* value(const  ::nodelet::NodeletUnloadResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
\n\
\n\
";
  }

  static const char* value(const  ::nodelet::NodeletUnloadResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::nodelet::NodeletUnloadRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.name);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct NodeletUnloadRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::nodelet::NodeletUnloadResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct NodeletUnloadResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<nodelet::NodeletUnload> {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const nodelet::NodeletUnload&) { return value(); } 
};

template<>
struct DataType<nodelet::NodeletUnload> {
  static const char* value() 
  {
    return "nodelet/NodeletUnload";
  }

  static const char* value(const nodelet::NodeletUnload&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<nodelet::NodeletUnloadRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const nodelet::NodeletUnloadRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<nodelet::NodeletUnloadRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "nodelet/NodeletUnload";
  }

  static const char* value(const nodelet::NodeletUnloadRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<nodelet::NodeletUnloadResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d08a3b641c2f8680fbdfb1ea2e17a3e1";
  }

  static const char* value(const nodelet::NodeletUnloadResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<nodelet::NodeletUnloadResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "nodelet/NodeletUnload";
  }

  static const char* value(const nodelet::NodeletUnloadResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // NODELET_SERVICE_NODELETUNLOAD_H

